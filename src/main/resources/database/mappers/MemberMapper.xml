<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mhj.base.member.MemberDAO">

	<!-- SELECT -->
	<select id="getMembers" resultType="MemberVO">
		SELECT USERNAME
		FROM MEMBER
	</select>
	
	<select id="idDuplicateCheck" parameterType="MemberVO" resultType="MemberVO">
		SELECT USERNAME
		FROM MEMBER
		WHERE USERNAME = #{username}
	</select>
	
	<select id="idEmailDuplicateCheck" parameterType="MemberVO" resultType="MemberVO">
		SELECT USERNAME, EMAIL
		FROM MEMBER
		WHERE USERNAME = #{username}, EMAIL = #{email}
	</select>
	
	<select id="getLogin" parameterType="MemberVO" resultMap="getMemberRole">
		SELECT *
		FROM MEMBER M
			INNER JOIN
			MEMBER_ROLE MR
			ON M.USERNAME = MR.USERNAME
			INNER JOIN
			ROLE R
			ON MR.NUM = R.NUM
		WHERE M.USERNAME = #{username}
	</select>
	
	<resultMap type="MemberVO" id="getMemberRole">
		<id column="USERNAME" property="username"/>
		<result column="PASSWORD" property="password"/>
		<result column="NAME" property="name"/>
		<result column="EMAIL" property="email"/>
		<result column="BIRTH" property="birth"/>
		<result column="ENABLED" property="enabled"/>
		<collection property="roleVO" javaType="List" ofType="RoleVO">
			<id column="NUM" property="num"/>
			<result column="ROLENAME" property="roleName"/>
		</collection>
	</resultMap>
	
	<select id="getBirth" parameterType="MemberVO" resultType="MemberVO">
		SELECT NAME, EMAIL
		FROM MEMBER
		WHERE DATE_FORMAT(BIRTH, '%m-%d') = DATE_FORMAT(now(), '%m-%d');
	</select>
	
	<!-- INSERT -->
	<insert id="setJoin" parameterType="MemberVO">
		INSERT INTO MEMBER (USERNAME, PASSWORD, NAME, EMAIL, BIRTH, ENABLED)
		VALUES (#{username}, #{password}, #{name}, #{email}, #{birth}, 1)
	</insert>
	
	<insert id="setMemberRole" parameterType="RoleVO">
		INSERT INTO MEMBER_ROLE (USERNAME, NUM)
		VALUES (#{username}, 3)
	</insert>
	
	<!-- UPDATE -->
	<update id="setLastTime" parameterType="MemberVO">
		UPDATE MEMBER
		SET LASTTIME = now()
		WHERE USERNAME = #{username}
	</update>
	
	<update id="setEnabled" parameterType="MemberVO">
		![CDATA
		UPDATE MEMBER
		SET ENABLED = 0
		WHERE USERNAME IN
		(SELECT USERNAME
		FROM MEMBER
		WHERE TIMESTAMPDIFF (DAY, LASTTIME, now()) >= 3)]]
		
		<!-- UPDATE MEMBER
		SET ENABLED = 0
		<![CDATA[WHERE LASTTIME <= now() - INTERVAL 3 DAY]]> -->
	</update>
	
	<!-- DELETE -->

</mapper>